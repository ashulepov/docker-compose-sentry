version: '2'
services:
  nginx:
      image: nginx:alpine
      restart: always
      hostname: nginx
      ports:
        - "80:80"
        - "443:443"
      links:
        - sentry-web
      depends_on:
        - sentry-web
        - letsencrypt
      volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./data/letsencrypt:/etc/letsencrypt
      - ./data/letsencrypt-www:/tmp/letsencrypt

  letsencrypt:
      restart: always
      image: kvaps/letsencrypt-webroot
      volumes:
        - /etc/localtime:/etc/localtime:ro
        - ./data/letsencrypt:/etc/letsencrypt
        - ./data/letsencrypt-www:/tmp/letsencrypt
      links:
        - nginx
      env_file: env/letsencrypt

  redis:
      restart: always
      image: redis:alpine
      hostname: redis
      expose:
        - "6379"
      volumes:
        - "./data/redis:/data"

  memcached:
      restart: always
      image: memcached:alpine
      hostname: memcached
      expose:
        - "11211"

  postgres:
      restart: always
      image: postgres:alpine
      hostname: postgres
      expose:
        - "5432"
      volumes:
        - "./data/postgres/etc:/etc/postgresql"
        - "./data/postgres/log:/var/log/postgresql"
        - "./data/postgres/lib/data:/var/lib/postgresql/data"

  sentry-web:
      restart: always
      image: sentry:8.20
      hostname: sentry
      expose:
        - "9000"
        - "9001"
      env_file: env/sentry
      depends_on:
        - redis
        - postgres
        - memcached
        - sentry-cron
        - sentry-worker
      links:
        - postgres
        - redis
        - memcached
      volumes:
        - ./sentry.conf.py:/etc/sentry/sentry.conf.py:ro
      environment:
        SENTRY_REDIS_HOST: redis
        SENTRY_POSTGRES_HOST: postgres

  sentry-cron:
      restart: always
      image: sentry:8.20
      hostname: sentry
      command: "sentry run cron"
      env_file: env/sentry
      depends_on:
        - redis
        - postgres
        - memcached
      links:
        - postgres
        - redis
        - memcached
      environment:
        SENTRY_REDIS_HOST: redis
        SENTRY_POSTGRES_HOST: postgres

  sentry-worker:
      restart: always
      image: sentry:8.20
      hostname: sentry
      command: "sentry run worker"
      env_file: env/sentry
      depends_on:
        - redis
        - postgres
        - memcached
      links:
        - postgres
        - redis
        - memcached
      environment:
        SENTRY_REDIS_HOST: redis
        SENTRY_POSTGRES_HOST: postgres
